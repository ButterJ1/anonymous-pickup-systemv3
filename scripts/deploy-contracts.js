const { ethers } = require("hardhat");

async function main() {
  console.log("🚀 Deploying Anonymous Pickup System contracts...");
  
  const [deployer] = await ethers.getSigners();
  console.log("📝 Deploying with account:", deployer.address);
  
  // Deploy Groth16Verifier
  console.log("📦 Deploying Groth16Verifier...");
  const Groth16Verifier = await ethers.getContractFactory("Groth16Verifier");
  const verifier = await Groth16Verifier.deploy();
  await verifier.waitForDeployment();
  console.log("✅ Groth16Verifier deployed to:", await verifier.getAddress());
  
  // Deploy LocalWallet
  console.log("📦 Deploying LocalWallet...");
  const LocalWallet = await ethers.getContractFactory("LocalWallet");
  const localWallet = await LocalWallet.deploy();
  await localWallet.waitForDeployment();
  console.log("✅ LocalWallet deployed to:", await localWallet.getAddress());
  
  // Deploy GroupSignaturePickupSystem
  console.log("📦 Deploying GroupSignaturePickupSystem...");
  const GroupSignaturePickupSystem = await ethers.getContractFactory("GroupSignaturePickupSystem");
  const pickupSystem = await GroupSignaturePickupSystem.deploy(await verifier.getAddress());
  await pickupSystem.waitForDeployment();
  console.log("✅ GroupSignaturePickupSystem deployed to:", await pickupSystem.getAddress());
  
  // Save addresses to .env.local
  const fs = require('fs');
  const envContent = `# Contract Addresses - Generated by deploy script
NEXT_PUBLIC_LOCAL_WALLET_ADDRESS=${await localWallet.getAddress()}
NEXT_PUBLIC_PICKUP_SYSTEM_ADDRESS=${await pickupSystem.getAddress()}
NEXT_PUBLIC_GROTH16_VERIFIER_ADDRESS=${await verifier.getAddress()}

# Network Configuration
NEXT_PUBLIC_RPC_URL=http://localhost:8545
NEXT_PUBLIC_CHAIN_ID=31337

# Development
NEXT_PUBLIC_DEBUG=true
`;
  
  fs.writeFileSync('.env.local', envContent);
  console.log("💾 Contract addresses saved to .env.local");
  
  console.log("\n🎉 Deployment complete!");
  console.log("🔗 Contract addresses:");
  console.log(`   LocalWallet: ${await localWallet.getAddress()}`);
  console.log(`   PickupSystem: ${await pickupSystem.getAddress()}`);
  console.log(`   Verifier: ${await verifier.getAddress()}`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("❌ Deployment failed:", error);
    process.exit(1);
  });